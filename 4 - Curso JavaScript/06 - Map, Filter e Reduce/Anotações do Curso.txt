Curso de JavaScript - Digital Innovation One

MAP, FILTER E REDUCE - TRABALHANDO COM ARRAYS

*****     MAP    *******************************************************
    - Método que serve para tornar um array em outro array através de uma função.
    - exemplo: o array [1,2,3] se torna [2,4,6] pela função x=2y.
    - O método MAP não modifica o array original, mas sim cria um novo como retorno.
    - Estrutura:
        array.map(callback, thisArg) // callback é a função a ser executada a cada item.
        callback(item,index,array)   // são os valores que conseguimos acessar.
        thisArg é um argumento opcional e pode ser usado como this na função.
    -MAP x forEach
        array.map((item) => item * 2); // retorno será outro array
        array.forEach((item) => item * 2); // retorno será UNDEFINED e deveremos usar um array auxiliar para essa operação.

*****     FILTER    **********************************************
    - Método que filtra o array e te retorna um novo array com os items que passarem pelo filtro.
    - array.filter(callback,thisArg)
        callback(item,index,array)   // são os valores que conseguimos acessar.
        thisArg é um argumento opcional e pode ser usado como this na função.
    - dado o array frutas ['maça verde','maça fuji','laranja','abacaxi']
        frutas.filter((fruta) => fruta.includes('maça')) //retorno ['maça verde','maça fuji']
        e o array frutas permanece intacto.

*****     REDUCE    **********************************************
    - É um método que executa uma operação em todos os itens de um array e retorna um resultado único.
    array.reduce(callbackFn, initialValue)
        callback função a ser executada a partir do acumulador
        initialValue é o valor sobre o qual o resultado final irá atuar.
    const callbackFn = function(accumulador, currentValue, index, array)