Curso de JavaScript - Digital Innovation One

DEBUGGING E ERROR HANDLING

*****     TIPOS DE ERROS     ******************************************************************

ECMA SCRIPT ERROR
    - Ocorre em tempo de execução.
    - Composto por Mensagem, Nome, Linha e CallStack
    - Erro de falta de ponto e virgula, varivel não declarada, etc. Erro mais comum.
DOM EXCEPTION
    - Document Object Model - Página Web
    - String com caracter inválido OU adicionar um elemento onde não é possível.

*****     TRATAMENTO DE ERROS     *************************************************************

THROW
    - dado o codigo: IF (!String) return "String Inválida"; Esse return é do tipo string.
    - dado o codigo: IF (!String) THROW "String Inválida"; Esse return é do tipo ERRO e é mostrado de forma diferente no console.
TRY...CATCH
    - TRY - Tenta executar o código ali dentro.
    - CATCH - É executado caso o código do TRY tenha um erro.
    Exemplo:
        try {
            verificaString(palavra);
        }
        catch(e) { // "e" seria o objeto erro retornado em algum momento no try. Aqui no catch ele pode ser tratado caso necessário.
            throw e;
        }
FINALLY
    - Esse bloco é opcional no TRY...CATCH e é usado após o catch.
    - Esse bloco é executado independente do processo ter dado erro ou não.

*****     OBJETO ERROR     *************************************************************
    - Um erro aceita os parametros message, fileName, lineNumber. Todos opcionais.
    const MeuErro = new Error('Mensagem Invalida')
    MeuErro.name = 'InvalidMessage';
    throw MeuErro;
    
